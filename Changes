import React, { useState } from 'react';
import { Info, Check } from 'lucide-react';

// Horizontal Stepper Component with inline styles
const Stepper = ({ steps }) => {
  const [hoveredTooltip, setHoveredTooltip] = useState(null);
  
  // Main container style
  const containerStyle = {
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'flex-start',
    width: '100%',
    overflowX: 'auto',
    padding: '20px 0'
  };
  
  // Step item style
  const stepItemStyle = {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    minWidth: '120px',
    margin: '0 10px'
  };
  
  // Checkmark circle style
  const circleStyle = {
    width: '24px',
    height: '24px',
    borderRadius: '50%',
    backgroundColor: '#22c55e', // green-500
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    color: 'white',
    marginTop: '8px'
  };
  
  // Separator line style
  const separatorStyle = {
    height: '1px',
    minWidth: '40px',
    backgroundColor: '#d1d5db', // gray-300
    margin: '0 5px'
  };
  
  // Tooltip container style
  const tooltipContainerStyle = {
    display: 'flex',
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: '8px'
  };
  
  // Info button style
  const infoButtonStyle = {
    width: '20px',
    height: '20px',
    borderRadius: '50%',
    backgroundColor: '#e5e7eb', // gray-200
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    cursor: 'pointer',
    margin: '0 4px'
  };
  
  // Tooltip popup style
  const tooltipStyle = {
    position: 'absolute',
    top: '30px',
    left: '50%',
    transform: 'translateX(-50%)',
    backgroundColor: 'white',
    padding: '8px',
    borderRadius: '4px',
    boxShadow: '0 2px 5px rgba(0,0,0,0.2)',
    zIndex: 100
  };
  
  return (
    <div style={containerStyle}>
      {steps.map((step, index) => (
        <React.Fragment key={index}>
          {/* Step item */}
          <div style={stepItemStyle}>
            <span style={{ fontWeight: 500, color: '#374151' }}>{step.name}</span>
            <div style={circleStyle}>
              <Check size={14} />
            </div>
            
            {/* Children tooltips */}
            {step.children && step.children.length > 0 && (
              <div style={tooltipContainerStyle}>
                {step.children.map((child, childIndex) => (
                  <div
                    key={childIndex}
                    style={{ position: 'relative' }}
                    onMouseEnter={() => setHoveredTooltip(`${index}-${childIndex}`)}
                    onMouseLeave={() => setHoveredTooltip(null)}
                  >
                    <div style={infoButtonStyle}>
                      <Info size={12} color="#4b5563" />
                    </div>
                    
                    {/* Tooltip content */}
                    {hoveredTooltip === `${index}-${childIndex}` && (
                      <div style={tooltipStyle}>
                        <span style={{ fontSize: '14px', color: '#374151' }}>{child.name}</span>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            )}
          </div>
          
          {/* Separator line between steps */}
          {index < steps.length - 1 && (
            <div style={separatorStyle}></div>
          )}
        </React.Fragment>
      ))}
    </div>
  );
};

export default Stepper;