import React, { useState } from 'react';
import { Info, Check } from 'lucide-react';

// Simplified Stepper Component
const Stepper = ({ steps }) => {
  const [hoveredTooltip, setHoveredTooltip] = useState(null);
  
  return (
    <div className="w-full mx-auto overflow-x-auto">
      {/* Main container - explicitly set to horizontal with flex */}
      <div className="flex flex-row items-center justify-start" style={{ display: 'flex', flexDirection: 'row' }}>
        {steps.map((step, index) => (
          <React.Fragment key={index}>
            {/* Step item */}
            <div className="flex flex-col items-center mx-2" style={{ minWidth: '120px' }}>
              <span className="font-medium text-gray-700">{step.name}</span>
              <div className="w-6 h-6 mt-2 rounded-full bg-green-500 flex items-center justify-center text-white">
                <Check size={14} />
              </div>
              
              {/* Children tooltips */}
              {step.children && step.children.length > 0 && (
                <div className="flex flex-row items-center mt-2">
                  {step.children.map((child, childIndex) => (
                    <div
                      key={childIndex}
                      className="relative mx-1"
                      onMouseEnter={() => setHoveredTooltip(`${index}-${childIndex}`)}
                      onMouseLeave={() => setHoveredTooltip(null)}
                    >
                      <div className="w-5 h-5 rounded-full bg-gray-200 flex items-center justify-center cursor-pointer">
                        <Info size={12} className="text-gray-600" />
                      </div>
                      
                      {/* Tooltip content */}
                      {hoveredTooltip === `${index}-${childIndex}` && (
                        <div className="absolute top-6 left-1/2 transform -translate-x-1/2 bg-white shadow-lg rounded p-2 z-10">
                          <span className="text-sm text-gray-700">{child.name}</span>
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              )}
            </div>
            
            {/* Separator line between steps */}
            {index < steps.length - 1 && (
              <div className="w-8 h-px bg-gray-300 mx-2" style={{ minWidth: '32px' }}></div>
            )}
          </React.Fragment>
        ))}
      </div>
    </div>
  );
};

export default Stepper;