import React, { useState } from 'react';
import { Info, Check } from 'lucide-react';

// Simplified Stepper Component
const Stepper = ({ steps }) => {
  const [hoveredTooltip, setHoveredTooltip] = useState(null);
  
  return (
    <div className="w-full mx-auto">
      {/* Stepper container */}
      <div className="flex flex-row items-center space-x-4 py-4">
        {steps.map((step, index) => (
          <div key={index} className="flex flex-col items-center space-y-2">
            {/* Step name and checkmark */}
            <div className="flex flex-col items-center space-y-2">
              <span className="font-medium text-gray-700">{step.name}</span>
              <div className="w-6 h-6 rounded-full bg-green-500 flex items-center justify-center text-white">
                <Check size={14} />
              </div>
            </div>
            
            {/* Children tooltips */}
            {step.children && step.children.length > 0 && (
              <div className="flex flex-row items-center space-x-2">
                {step.children.map((child, childIndex) => (
                  <div
                    key={childIndex}
                    className="relative flex flex-col items-center"
                    onMouseEnter={() => setHoveredTooltip(`${index}-${childIndex}`)}
                    onMouseLeave={() => setHoveredTooltip(null)}
                  >
                    <div className="w-5 h-5 rounded-full bg-gray-200 flex items-center justify-center cursor-pointer">
                      <Info size={12} className="text-gray-600" />
                    </div>
                    
                    {/* Tooltip content */}
                    {hoveredTooltip === `${index}-${childIndex}` && (
                      <div className="absolute top-8 left-1/2 transform -translate-x-1/2 bg-white shadow-lg rounded p-2">
                        <span className="text-sm text-gray-700">{child.name}</span>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            )}
          </div>
        ))}
        
        {/* Separator, except for last item */}
        {steps.map((_, index) => (
          index < steps.length - 1 && (
            <div key={`separator-${index}`} className="h-px w-8 bg-gray-300"></div>
          )
        ))}
      </div>
    </div>
  );
};

export default Stepper;