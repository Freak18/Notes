import React, { useState, useEffect } from 'react';
import Mermaid from 'mermaid';

const NewKibanaDisplay = ({ url }) => {
  const [apiUris, setApiUris] = useState([]);
  const [chart, setChart] = useState('');
  const [error, setError] = useState(null);

  useEffect(() => {
    // Fetch JSON data from the provided URL
    const fetchJsonData = async () => {
      try {
        const response = await fetch(url);
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        const data = await response.json();
        
        // Extract API URIs from the JSON data
        const extractedUris = data.map(item => item.api_Uri).filter(Boolean);
        setApiUris(extractedUris);
      } catch (err) {
        console.error('Error fetching or processing JSON:', err);
        setError(err.message);
      }
    };

    fetchJsonData();
  }, [url]);

  useEffect(() => {
    // Initialize Mermaid
    Mermaid.initialize({ 
      startOnLoad: false,
      theme: 'default'
    });

    // Create flowchart definition
    if (apiUris.length > 0) {
      let flowchartDefinition = 'flowchart TD\n';
      
      // Add nodes
      apiUris.forEach((uri, index) => {
        flowchartDefinition += `  node${index}["${uri}"]\n`;
      });

      // Add connections
      apiUris.forEach((uri, index) => {
        if (index > 0) {
          flowchartDefinition += `  node${index-1} --> node${index}\n`;
        }
      });

      setChart(flowchartDefinition);
    }
  }, [apiUris]);

  useEffect(() => {
    // Render the chart whenever the chart definition changes
    if (chart) {
      Mermaid.contentLoaded();
    }
  }, [chart]);

  // Render error state
  if (error) {
    return (
      <div className="p-4 text-red-500">
        Error loading data: {error}
      </div>
    );
  }

  // Render loading state
  if (apiUris.length === 0) {
    return (
      <div className="p-4">
        Loading...
      </div>
    );
  }

  return (
    <div className="p-4">
      <h1 className="text-2xl mb-4">API Flow Diagram</h1>
      <div className="mermaid">
        {chart}
      </div>
    </div>
  );
};

// Example usage
const App = () => {
  return (
    <NewKibanaDisplay 
      url="/path/to/your/kibana/json/file.json" 
    />
  );
};

export default NewKibanaDisplay;