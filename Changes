import React, { useState, useEffect } from 'react';
import ReactFlow, { 
  ReactFlowProvider, 
  Controls, 
  Background 
} from 'react-flow-renderer';

const NewKibanaDisplay = () => {
  const [apiUris, setApiUris] = useState([]);

  useEffect(() => {
    fetch(url)
      .then((response) => response.json())
      .then((data) => {
        const apiNodes = data.data.map((item, index) => ({
          id: `node-${index}`,
          data: { label: item.api_Uri },
          position: { x: 100, y: index * 100 }
        }));

        const edges = apiNodes.slice(0, -1).map((node, index) => ({
          id: `edge-${index}`,
          source: node.id,
          target: apiNodes[index + 1].id
        }));

        setApiUris({ nodes: apiNodes, edges });
      })
      .catch((error) => console.error("Error fetching data:", error));
  }, []);

  return (
    <div style={{ height: '500px', width: '100%' }}>
      <ReactFlowProvider>
        <ReactFlow
          nodes={apiUris.nodes}
          edges={apiUris.edges}
          fitView
        >
          <Controls />
          <Background />
        </ReactFlow>
      </ReactFlowProvider>
    </div>
  );
};

export default NewKibanaDisplay;